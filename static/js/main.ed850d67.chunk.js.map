{"version":3,"sources":["components/pages/Login/contextLogin/LoginContext.tsx","components/Time.tsx","components/GoogleSignIn.tsx","consts.ts","components/Navbar.tsx","components/Footer.tsx","components/pages/Login/Login.tsx","components/SliderComponent.tsx","components/pages/Main/Main.tsx","components/pages/Users/Users.tsx","components/pages/User/User.tsx","components/Todos/TodoForm.tsx","components/Todos/TodoList.tsx","components/pages/Todos/Todos.tsx","components/pages/Weather/contextWeather/WeatherContext.tsx","components/Weather/WeatherForm.tsx","components/Weather/WeatherInformation.tsx","components/pages/Weather/Weather.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ADD_LOGIN","LOGOUT","ADD_GOOGLE_ID","LoginContext","createContext","userToken","googleId","addLogin","token","removeLogin","addGoogleId","dispatch","useLoginContext","useContext","reducer","state","action","type","payload","localStorage","setItem","LoginContextProvider","children","useReducer","Provider","value","Time","useState","time","moment","format","currentTime","setCurrentTimeTime","useEffect","setTimeout","className","GoogleSignIn","clientId","buttonText","onSuccess","response","console","log","onFailure","cookiePolicy","Navbar","userTokenLocalStorage","JSON","parse","stringify","getItem","googleIdLocalStorage","isAuth","to","id","activeClassName","onClick","Footer","fetchLogin","form","a","fetch","method","headers","body","json","resultOfFetching","Login","email","password","setForm","mutation","useMutation","history","useHistory","data","push","isSuccess","handleChange","event","target","name","prev","onSubmit","preventDefault","mutate","onChange","placeholder","SliderComponent","autoPlay","infinite","autoPlayInterval","animationType","disableButtonsControls","img","title","map","slide","src","alt","Main","fetchUsers","key","queryKey","res","Users","props","pageNumber","location","search","substr","page","setPage","useQuery","keepPreviousData","status","columns","dataIndex","render","avatar","updateData","item","first_name","last_name","nanoid","dataSource","pagination","onRow","record","total_pages","fetchUser","User","Number","match","params","goBack","TodoForm","ref","useRef","onKeyPress","onAdd","current","htmlFor","TodoList","todos","onToggle","onRemove","length","todo","classes","completed","join","checked","removeHandler","Todos","setTodos","savedTodos","newTodo","Date","now","confirm","filter","ADD_CITY","WeatherContext","city","addCity","useWeatherContext","WeatherContextProvider","WeatherForm","WeatherInformation","main","weather","wind","description","temp_min","toFixed","temp_max","temp","feels_like","speed","Weather","fetchWeather","queryClient","QueryClient","App","client","path","component","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ed850d67.chunk.js","sourcesContent":["import React, { useContext, useReducer, createContext } from \"react\";\n\nimport { ILoginContext } from \"../../../../intefaces\";\n\n/*Констаты */\nexport const ADD_LOGIN: string = \"ADD_LOGIN\";\nexport const LOGOUT: string = \"REMOVE_LOGIN\";\nexport const ADD_GOOGLE_ID: string = \"ADD_GOOGLE_ID\";\n\n/*Создание контекста */\nexport const LoginContext = createContext<ILoginContext>({\n  userToken: \"\",\n  googleId: \"\",\n  addLogin: (token: string) => {},\n  removeLogin: () => {},\n  addGoogleId: (googleId: string) => {},\n  dispatch: () => {},\n});\n\n/*Создание функции для использования контекста в других компонентах */\nexport const useLoginContext = () => {\n  return useContext(LoginContext);\n};\n\n/*Создание редьюсера */\nconst reducer = (\n  state: { userToken: string; googleId: string },\n  action: { type: string; payload: string }\n) => {\n  switch (action.type) {\n    case ADD_LOGIN:\n      return {\n        ...state,\n        userToken: action.payload,\n      };\n    case ADD_GOOGLE_ID:\n      localStorage.setItem(\"googleId\", action.payload);\n      return {\n        ...state,\n        googleId: action.payload,\n      };\n    case LOGOUT:\n      localStorage.setItem(\"token\", \"\");\n      localStorage.setItem(\"googleId\", \"\");\n      return {\n        ...state,\n        userToken: \"\",\n      };\n    default:\n      return state;\n  }\n};\n\n/*Создание основного компонента */\nexport const LoginContextProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    userToken: \"\",\n    googleId: \"\",\n  });\n\n  const addLogin = (token: string) =>\n    dispatch({ type: ADD_LOGIN, payload: token });\n\n  const removeLogin = () => dispatch({ type: LOGOUT, payload: \"\" });\n\n  const addGoogleId = (googleId: string) =>\n    dispatch({ type: ADD_GOOGLE_ID, payload: googleId });\n\n  return (\n    <LoginContext.Provider\n      value={{\n        userToken: state.userToken,\n        googleId: state.googleId,\n        addLogin,\n        removeLogin,\n        addGoogleId,\n        dispatch,\n      }}\n    >\n      {children}\n    </LoginContext.Provider>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport moment from \"moment\";\nimport \"moment/locale/ru\";\n\nimport { ITime } from \"../intefaces\";\n\nexport const Time: React.FC = () => {\n  const [currentTime, setCurrentTimeTime] = useState<ITime>({\n    time: moment().format(\"LTS\"),\n  });\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCurrentTimeTime({ time: moment().format(\"LTS\") });\n    }, 1000);\n  }, [currentTime]);\n\n  return (\n    <>\n      <div className=\"time\">Moscow time: {currentTime.time}</div>\n    </>\n  );\n};\n","import React from \"react\";\nimport { GoogleLogin } from \"react-google-login\";\n\nimport { yourClientID } from \"../consts\";\nimport { useLoginContext } from \"../components/pages/Login/contextLogin/LoginContext\";\n\nexport const GoogleSignIn: React.FC = () => {\n  const { addGoogleId } = useLoginContext();\n  return (\n    <>\n      <GoogleLogin\n        clientId={`${yourClientID}`}\n        buttonText=\"Login\"\n        onSuccess={(response) => {\n          console.log(\"Done\");\n          if (\"googleId\" in response) {\n            if (response.googleId) {\n              addGoogleId(response.googleId);\n            }\n          }\n        }}\n        onFailure={(response) => {\n          console.log(\"Fail login\");\n        }}\n        cookiePolicy={\"single_host_origin\"}\n      />\n    </>\n  );\n};\n","export const apiKeyForWeather: string = \"441bb21102533d3c29fbd32bc303d636\";\n\nexport const yourClientID: string =\n  \"123119292834-74ufhn8pjim22ev4cobp231nlpaaq5va.apps.googleusercontent.com\";\n\nexport const yourClientSecret: string = \"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\";\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { useLoginContext } from \"../components/pages/Login/contextLogin/LoginContext\";\nimport { Time } from \"./Time\";\nimport { GoogleSignIn } from \"../components/GoogleSignIn\";\n\nexport const Navbar: React.FC = () => {\n  const userTokenLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"token\"))\n  );\n\n  const googleIdLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"googleId\"))\n  );\n\n  const isAuth = userTokenLocalStorage || googleIdLocalStorage;\n\n  const { removeLogin } = useLoginContext();\n\n  return (\n    <>\n      {!isAuth && (\n        <nav>\n          <div className=\"nav-wrapper #0288d1 light-blue darken-2\">\n            <NavLink to=\"/\" className=\"brand-logo\">\n              TS Tutorial\n            </NavLink>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n              <li>\n                <GoogleSignIn />\n              </li>\n            </ul>\n          </div>\n        </nav>\n      )}\n      {isAuth && (\n        <nav>\n          <div className=\"nav-wrapper #0288d1 light-blue darken-2\">\n            <NavLink to=\"/\" className=\"brand-logo\">\n              TS Tutorial\n            </NavLink>\n            <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down\">\n              <li>\n                <Time />\n              </li>\n              <li>\n                <NavLink to=\"/\" activeClassName=\"active\">\n                  Main\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/users\" activeClassName=\"active\">\n                  Users\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/todos\" activeClassName=\"active\">\n                  Todos\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/weather\" activeClassName=\"active\">\n                  Weather\n                </NavLink>\n              </li>\n              <li>\n                <NavLink\n                  to=\"/login\"\n                  className=\"navbar-logout\"\n                  activeClassName=\"active\"\n                  onClick={() => removeLogin()}\n                >\n                  Go away\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </nav>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Footer: React.FC = () => {\n  return (\n    <footer className=\"page-footer\">\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col l6 s12\">\n            <NavLink to=\"/\">\n              <h5 className=\"white-text\">TS Tutorial</h5>\n            </NavLink>\n          </div>\n          <div className=\"col l4 offset-l2 s12\">\n            <ul>\n              <li>\n                <NavLink to=\"/\" className=\"grey-text text-lighten-3\">\n                  Main\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/users\" className=\"grey-text text-lighten-3\">\n                  Users\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/todos\" className=\"grey-text text-lighten-3\">\n                  Todos\n                </NavLink>\n              </li>\n              <li>\n                <NavLink to=\"/weather\" className=\"grey-text text-lighten-3\">\n                  Weather\n                </NavLink>\n              </li>\n            </ul>\n          </div>\n        </div>\n      </div>\n      <div className=\"footer-copyright\">\n        <div className=\"container\">© 2021 SerViktor</div>\n      </div>\n    </footer>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useMutation } from \"react-query\";\n\nimport { IForm } from \"../../../intefaces\";\nimport { ADD_LOGIN, useLoginContext } from \"../Login/contextLogin/LoginContext\";\n\nconst fetchLogin = async (form: IForm) => {\n  const response = await fetch(\"https://reqres.in/api/login\", {\n    method: \"POST\",\n    headers: {\n      \"Content-Type\": \"application/json;charset=utf-8\",\n    },\n    body: JSON.stringify(form),\n  });\n\n  let resultOfFetching = await response.json();\n  if (resultOfFetching !== \"\") {\n    localStorage.setItem(\"token\", JSON.stringify(resultOfFetching.token));\n  }\n  return resultOfFetching;\n};\n\nexport const Login: React.FC = () => {\n  const [form, setForm] = useState<IForm>({ email: \"\", password: \"\" });\n  const mutation = useMutation(fetchLogin);\n\n  const googleIdLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"googleId\"))\n  );\n\n  const { dispatch } = useLoginContext();\n  const history = useHistory();\n\n  useEffect(() => {\n    if (mutation.data) {\n      dispatch({ type: ADD_LOGIN, payload: mutation.data.token });\n    }\n    if (googleIdLocalStorage) {\n      history.push(\"/\");\n    }\n  }, [\n    dispatch,\n    mutation.isSuccess,\n    mutation.data,\n    history,\n    googleIdLocalStorage,\n  ]);\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.target;\n    setForm((prev) => ({ ...prev, [name]: value }));\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    mutation.mutate(form);\n  };\n\n  return (\n    <div className=\"page-container\">\n      {mutation.isSuccess === true && <Redirect to=\"/\" />}\n      <h1>Authorization</h1>\n      <div className=\"row\">\n        <form className=\"col s12\" onSubmit={handleSubmit}>\n          <div className=\"row\">\n            <div className=\"input-field col s6\">\n              <input\n                className=\"validate\"\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                value={form.email}\n                onChange={handleChange}\n                placeholder=\"email\"\n              />\n            </div>\n            <div className=\"row\">\n              <div className=\"input-field col s6\">\n                <input\n                  className=\"validate\"\n                  id=\"password\"\n                  type=\"password\"\n                  name=\"password\"\n                  value={form.password}\n                  onChange={handleChange}\n                  placeholder=\"password\"\n                />\n              </div>\n            </div>\n          </div>\n          <button\n            className=\"btn waves-effect waves-light\"\n            type=\"submit\"\n            name=\"action\"\n          >\n            Submit\n            <i className=\"material-icons right\">send</i>\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport AliceCarousel from \"react-alice-carousel\";\n\nexport const SliderComponent: React.FC = () => {\n  const slides = [\n    {\n      id: 1,\n      img: \"https://images.wallpaperscraft.ru/image/single/reka_holmy_bereg_224563_1280x720.jpg\",\n      title: \"Picture 1\",\n    },\n    {\n      id: 2,\n      img: \"https://images.wallpaperscraft.ru/image/single/reka_bereg_derevia_202433_1280x720.jpg\",\n      title: \"Picture 2\",\n    },\n    {\n      id: 3,\n      img: \"https://images.wallpaperscraft.ru/image/single/reka_bereg_derevia_169432_1280x720.jpg\",\n      title: \"Picture 3\",\n    },\n    {\n      id: 4,\n      img: \"https://images.wallpaperscraft.ru/image/single/reka_bereg_derevia_162056_1280x720.jpg\",\n      title: \"Picture 4\",\n    },\n    {\n      id: 5,\n      img: \"https://images.wallpaperscraft.ru/image/single/reka_skaly_derevia_191359_1280x720.jpg\",\n      title: \"Picture 5\",\n    },\n    {\n      id: 6,\n      img: \"https://images.wallpaperscraft.ru/image/single/reka_skaly_derevia_196000_1280x720.jpg\",\n      title: \"Picture 6\",\n    },\n  ];\n\n  return (\n    <>\n      <AliceCarousel\n        autoPlay={true}\n        infinite={true}\n        autoPlayInterval={1000}\n        animationType={\"fadeout\"}\n        disableButtonsControls={true}\n      >\n        {slides.map((slide) => (\n          <div className=\"banner\" key={slide.id}>\n            <img src={slide.img} alt={slide.title} />\n          </div>\n        ))}\n      </AliceCarousel>\n    </>\n  );\n};\n","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { SliderComponent } from \"../../SliderComponent\";\n\nexport const Main: React.FC = () => {\n  const userTokenLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"token\"))\n  );\n\n  const googleIdLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"googleId\"))\n  );\n\n  const isAuth = userTokenLocalStorage || googleIdLocalStorage;\n\n  return (\n    <div className=\"page-container\">\n      {isAuth && (\n        <>\n          <h1>Main Page</h1>\n          <p>\n            Lorem ipsum dolor sit amet consectetur adipisicing elit. Dignissimos\n            veritatis quisquam tempora ipsam? Vel iusto incidunt saepe veniam id\n            eius ab molestiae, quas quasi ducimus. Quidem commodi error eaque,\n            quibusdam labore neque omnis quia aperiam sapiente consectetur\n            necessitatibus obcaecati voluptate, dolorem magni alias, tempora\n            sed. Itaque sunt consectetur voluptas maiores consequuntur? Maiores\n            reprehenderit repudiandae aperiam soluta incidunt eum qui ratione?\n          </p>\n          <h2>Veniam rerum</h2>\n          <p>\n            Veniam rerum totam molestiae tempore deserunt, accusantium ex quae\n            consequatur dolorum id. Vitae necessitatibus dolores voluptates\n            suscipit adipisci ab doloribus natus inventore delectus eveniet at\n            expedita quos nesciunt dolore omnis sapiente magni, fugit, quisquam\n            perspiciatis amet optio doloremque? Explicabo ut corporis aliquam\n            maxime obcaecati repellat facilis, officia quis iure suscipit\n            dignissimos optio beatae, aspernatur error minus neque consequatur\n            esse fugiat sit eum! Eum, perferendis, perspiciatis corrupti totam\n            suscipit repellat cum architecto reprehenderit molestias enim odio\n            quam rem molestiae magnam earum voluptatem. Laborum dolore deserunt\n            accusantium velit eveniet, quo obcaecati cumque.\n          </p>\n          <SliderComponent />\n          <h2>Veniam rerum</h2>\n          <p>\n            Veniam rerum totam molestiae tempore deserunt, accusantium ex quae\n            consequatur dolorum id. Vitae necessitatibus dolores voluptates\n            suscipit adipisci ab doloribus natus inventore delectus eveniet at\n            expedita quos nesciunt dolore omnis sapiente magni, fugit, quisquam\n            perspiciatis amet optio doloremque? Explicabo ut corporis aliquam\n            maxime obcaecati repellat facilis, officia quis iure suscipit\n            dignissimos optio beatae, aspernatur error minus neque consequatur\n            esse fugiat sit eum! Eum, perferendis, perspiciatis corrupti totam\n            suscipit repellat cum architecto reprehenderit molestias enim odio\n            quam rem molestiae magnam earum voluptatem. Laborum dolore deserunt\n            accusantium velit eveniet, quo obcaecati cumque.\n          </p>\n          <p>\n            Veniam rerum totam molestiae tempore deserunt, accusantium ex quae\n            consequatur dolorum id. Vitae necessitatibus dolores voluptates\n            suscipit adipisci ab doloribus natus inventore delectus eveniet at\n            expedita quos nesciunt dolore omnis sapiente magni, fugit, quisquam\n            perspiciatis amet optio doloremque? Explicabo ut corporis aliquam\n            maxime obcaecati repellat facilis, officia quis iure suscipit\n            dignissimos optio beatae, aspernatur error minus neque consequatur\n            esse fugiat sit eum! Eum, perferendis, perspiciatis corrupti totam\n            suscipit repellat cum architecto reprehenderit molestias enim odio\n            quam rem molestiae magnam earum voluptatem. Laborum dolore deserunt\n            accusantium velit eveniet, quo obcaecati cumque.\n          </p>\n        </>\n      )}\n      {!isAuth && <Redirect to=\"/login\" />}\n    </div>\n  );\n};\n","import React, { useState } from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\nimport { Table } from \"antd\";\nimport { nanoid } from \"nanoid\";\n\nimport { IQueryKey, IUpdateData } from \"../../../intefaces\";\n\nconst fetchUsers = async (key: IQueryKey) => {\n  const res = await fetch(\n    `https://reqres.in/api/users?page=${key.queryKey[1]}`\n  );\n  return res.json();\n};\n\ntype Props = {\n  history: {};\n  location: {\n    search: string;\n  };\n  match: {};\n};\n\nexport const Users: React.FC<Props> = (props) => {\n  const userTokenLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"token\"))\n  );\n\n  const googleIdLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"googleId\"))\n  );\n\n  const isAuth = userTokenLocalStorage || googleIdLocalStorage;\n\n  let pageNumber: string = props.location.search.substr(6);\n\n  const [page, setPage] = useState(pageNumber || 1);\n  const { data, status } = useQuery([\"users\", page], fetchUsers, {\n    keepPreviousData: true,\n  });\n\n  const history = useHistory();\n\n  const columns = [\n    {\n      title: \"Avatar\",\n      dataIndex: \"avatar\",\n      key: \"avatar\",\n      render: (avatar: string) => {\n        return (\n          <>\n            <img src={`${avatar}`} alt={avatar} />\n          </>\n        );\n      },\n    },\n    {\n      title: \"First name\",\n      dataIndex: \"first_name\",\n      key: \"first_name\",\n    },\n    {\n      title: \"Last name\",\n      dataIndex: \"last_name\",\n      key: \"last_name\",\n    },\n    {\n      title: \"Email\",\n      dataIndex: \"email\",\n      key: \"email\",\n    },\n  ];\n\n  let updateData: [] = [];\n\n  if (status === \"success\") {\n    updateData = data.data.map((item: IUpdateData) => {\n      return {\n        id: item.id,\n        avatar: item.avatar,\n        email: item.email,\n        first_name: item.first_name,\n        last_name: item.last_name,\n        key: nanoid(),\n      };\n    });\n  }\n\n  return (\n    <div className=\"page-container\">\n      {isAuth && (\n        <>\n          <h1>Users</h1>\n          {status === \"loading\" && <div>Loading data...</div>}\n          {status === \"error\" && <div>Error fetching data</div>}\n          {status === \"success\" && (\n            <>\n              <Table\n                columns={columns}\n                dataSource={updateData}\n                pagination={false}\n                onRow={(record: IUpdateData) => {\n                  return {\n                    onClick: (event) => {\n                      return history.push(`/users/user-${record.id}`);\n                    },\n                  };\n                }}\n              ></Table>\n              {data.page === 1 && (\n                <div className=\"pagination-list-users\">\n                  <div className=\"page-list-users\">{data.page}</div>\n                  <div\n                    className=\"up-list-users\"\n                    onClick={() => {\n                      setPage((data.page += 1));\n                      history.push(`/users?page=${data.page}`);\n                    }}\n                  >\n                    +\n                  </div>\n                </div>\n              )}\n              {data.page === data.total_pages && (\n                <div className=\"pagination-list-users\">\n                  <div\n                    className=\"down-list-users\"\n                    onClick={() => {\n                      setPage((data.page -= 1));\n                      if (data.page === 1) {\n                        history.push(`/users`);\n                      } else {\n                        history.push(`/users?page=${data.page}`);\n                      }\n                    }}\n                  >\n                    -\n                  </div>\n                  <div className=\"page-list-users\">{data.page}</div>\n                </div>\n              )}\n            </>\n          )}\n        </>\n      )}\n      {!isAuth && <Redirect to=\"/login\" />}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Redirect, useHistory } from \"react-router-dom\";\nimport { useQuery } from \"react-query\";\n\nimport { IQueryKey } from \"../../../intefaces\";\n\ntype Props = {\n  history: {};\n  location: {};\n  match: {\n    params: {\n      id: string;\n    };\n  };\n};\n\nconst fetchUser = async (key: IQueryKey) => {\n  const res = await fetch(`https://reqres.in/api/users?id=${key.queryKey[1]}`);\n  return res.json();\n};\n\nexport const User: React.FC<Props> = (props) => {\n  const userTokenLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"token\"))\n  );\n\n  const googleIdLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"googleId\"))\n  );\n\n  const isAuth = userTokenLocalStorage || googleIdLocalStorage;\n\n  const id: number = Number(props.match.params.id);\n\n  const { data, status } = useQuery([\"user\", id], fetchUser);\n  const history = useHistory();\n\n  return (\n    <div className=\"page-container\">\n      {isAuth && (\n        <>\n          {status === \"loading\" && <div>Loading data...</div>}\n          {status === \"error\" && <div>Error fetching data</div>}\n          {status === \"success\" && (\n            <>\n              <h1>\n                {data.data.first_name} {data.data.last_name}\n              </h1>\n              <div className=\"user-card\">\n                <div className=\"user-image\">\n                  <img\n                    src={`${data.data.avatar}`}\n                    alt={`${data.data.first_name} ${data.data.last_name}`}\n                  />\n                </div>\n                <div className=\"user-info\">\n                  <div className=\"user-info-name\">\n                    <p>Name:</p>\n                    {` ${data.data.first_name}`}\n                    {` ${data.data.last_name}`}\n                  </div>\n                  <div className=\"user-info-email\">\n                    <p>e-mail:</p> {` ${data.data.email}`}\n                  </div>\n                </div>\n              </div>\n              <button\n                className=\"waves-effect waves-light btn\"\n                onClick={() => {\n                  history.goBack();\n                }}\n              >\n                Go back\n              </button>\n            </>\n          )}\n        </>\n      )}\n      {!isAuth && <Redirect to=\"/login\" />}\n    </div>\n  );\n};\n","import React, { useRef } from \"react\";\n\ninterface TodoFormProps {\n  onAdd(title: string): void;\n}\n\nexport const TodoForm: React.FC<TodoFormProps> = (props) => {\n  const ref = useRef<HTMLInputElement>(null);\n\n  const onKeyPressHandler = (event: React.KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      props.onAdd(ref.current!.value);\n      ref.current!.value = \"\";\n    }\n  };\n\n  return (\n    <div className=\"input-field\">\n      <input\n        ref={ref}\n        type=\"text\"\n        id=\"title\"\n        placeholder=\"Введите заголовок задачи\"\n        onKeyPress={onKeyPressHandler}\n      />\n      <label htmlFor=\"title\" className=\"active\">\n        Новая задача\n      </label>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { ITodo } from \"../../intefaces\";\n\ntype TodoListProps = {\n  todos: ITodo[];\n  onToggle(id: number): void;\n  onRemove: (id: number) => void;\n};\n\nexport const TodoList: React.FC<TodoListProps> = ({\n  todos,\n  onToggle,\n  onRemove,\n}) => {\n  if (todos.length === 0) {\n    return <p className=\"center\">Список задач пуст</p>;\n  }\n\n  const removeHandler = (event: React.MouseEvent, id: number) => {\n    event.preventDefault();\n    onRemove(id);\n  };\n\n  return (\n    <ul>\n      {todos.map((todo) => {\n        const classes = [\"todo\"];\n        if (todo.completed) {\n          classes.push(\"completed\");\n        }\n        return (\n          <li className={classes.join(\" \")} key={todo.id}>\n            <label>\n              <input\n                type=\"checkbox\"\n                checked={todo.completed}\n                onChange={() => onToggle(todo.id)}\n              />\n              <span>{todo.title}</span>\n              <i\n                className=\"material-icons red-text\"\n                onClick={(event) => removeHandler(event, todo.id)}\n              >\n                delete\n              </i>\n            </label>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","import React, { useState, useEffect } from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { TodoForm } from \"../../Todos/TodoForm\";\nimport { TodoList } from \"../../Todos/TodoList\";\nimport { ITodo } from \"../../../intefaces\";\n\ndeclare var confirm: (question: string) => boolean;\n\nexport const Todos: React.FC = () => {\n  const userTokenLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"token\"))\n  );\n\n  const googleIdLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"googleId\"))\n  );\n\n  const isAuth = userTokenLocalStorage || googleIdLocalStorage;\n\n  const [todos, setTodos] = useState<ITodo[]>([]);\n\n  useEffect(() => {\n    const savedTodos = JSON.parse(\n      localStorage.getItem(\"todos\") || \"[]\"\n    ) as ITodo[];\n    setTodos(savedTodos);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const addHandlerTodo = (title: string) => {\n    const newTodo: ITodo = {\n      title: title,\n      id: Date.now(),\n      completed: false,\n    };\n    setTodos((prev) => [newTodo, ...prev]);\n  };\n\n  const toggleHandler = (id: number) => {\n    setTodos((prev) =>\n      prev.map((todo) => {\n        if (todo.id === id) {\n          return {\n            ...todo,\n            completed: !todo.completed,\n          };\n        }\n        return todo;\n      })\n    );\n  };\n\n  const removeHandler = (id: number) => {\n    const shouldRemove = confirm(\"Вы уверены, что хотите удалить элемент?\");\n    if (shouldRemove) {\n      setTodos((prev) => prev.filter((todo) => todo.id !== id));\n    }\n  };\n\n  return (\n    <div className=\"page-container\">\n      {isAuth && (\n        <>\n          <h1>Todos</h1>\n          <TodoForm onAdd={addHandlerTodo} />\n          <TodoList\n            todos={todos}\n            onToggle={toggleHandler}\n            onRemove={removeHandler}\n          />\n        </>\n      )}\n\n      {!isAuth && <Redirect to=\"/login\" />}\n    </div>\n  );\n};\n","import React, { useContext, useReducer, createContext } from \"react\";\n\nimport { IWeatherContext } from \"../../../../intefaces\";\n\n/*Констаты */\nexport const ADD_CITY: string = \"ADD_CITY\";\n\n/*Создание контекста */\nexport const WeatherContext = createContext<IWeatherContext>({\n  city: \"\",\n  addCity: (city: string) => {},\n  dispatch: () => {},\n});\n\n/*Создание функции для использования контекста в других компонентах */\nexport const useWeatherContext = () => {\n  return useContext(WeatherContext);\n};\n\n/*Создание редьюсера */\nconst reducer = (\n  state: { city: string },\n  action: { type: string; payload: string }\n) => {\n  switch (action.type) {\n    case ADD_CITY:\n      return {\n        ...state,\n        city: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\n/*Создание основного компонента */\nexport const WeatherContextProvider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, {\n    city: \"\",\n  });\n\n  const addCity = (city: string) => dispatch({ type: ADD_CITY, payload: city });\n\n  return (\n    <WeatherContext.Provider value={{ city: state.city, addCity, dispatch }}>\n      {children}\n    </WeatherContext.Provider>\n  );\n};\n","import React, { useRef } from \"react\";\n\nimport { useWeatherContext } from \"../pages/Weather/contextWeather/WeatherContext\";\n\nexport const WeatherForm: React.FC = () => {\n  const { addCity } = useWeatherContext();\n\n  const ref = useRef<HTMLInputElement>(null);\n\n  const cityHandler = (event: React.KeyboardEvent) => {\n    if (event.key === \"Enter\") {\n      addCity(ref.current!.value);\n      ref.current!.value = \"\";\n    }\n  };\n  return (\n    <div className=\"input-field\">\n      <input\n        ref={ref}\n        type=\"text\"\n        id=\"city\"\n        placeholder=\"Введите город\"\n        onKeyPress={cityHandler}\n      />\n    </div>\n  );\n};\n","import React from \"react\";\n\nimport { useWeatherContext } from \"../pages/Weather/contextWeather/WeatherContext\";\n\ntype Props = {\n  data: {\n    main: {\n      feels_like: number;\n      temp: number;\n      temp_max: number;\n      temp_min: number;\n    };\n    name: string;\n    weather: [\n      {\n        description: string;\n      }\n    ];\n    wind: {\n      speed: number;\n    };\n  };\n};\n\nexport const WeatherInformation: React.FC<Props> = (props) => {\n  const { city } = useWeatherContext();\n\n  const { main, name, weather, wind } = props.data;\n\n  return (\n    <>\n      {!city && <div>The city is not specified!</div>}\n      {city && (\n        <>\n          <h2>{name}</h2>\n          <p>Сегодня в городе {weather[0].description}!</p>\n          <p>\n            Ожидается температура от {main.temp_min.toFixed()} до{\" \"}\n            {main.temp_max.toFixed()} ℃.\n          </p>\n          <p>\n            Сейчас за окном {main.temp.toFixed()} ℃. Ощущается как{\" \"}\n            {main.feels_like.toFixed()} ℃.\n          </p>\n          <p>Скорость ветра: {wind.speed.toFixed()} м/с.</p>\n        </>\n      )}\n    </>\n  );\n};\n","import React from \"react\";\nimport { useQuery } from \"react-query\";\nimport { Redirect } from \"react-router-dom\";\n\nimport { apiKeyForWeather } from \"../../../consts\";\nimport { IQueryKey } from \"../../../intefaces\";\nimport { WeatherForm } from \"../../Weather/WeatherForm\";\nimport { WeatherInformation } from \"../../Weather/WeatherInformation\";\nimport { useWeatherContext } from \"../Weather/contextWeather/WeatherContext\";\n\nexport const Weather: React.FC = () => {\n  const userTokenLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"token\"))\n  );\n\n  const googleIdLocalStorage: string = JSON.parse(\n    JSON.stringify(localStorage.getItem(\"googleId\"))\n  );\n\n  const isAuth = userTokenLocalStorage || googleIdLocalStorage;\n  const { city } = useWeatherContext();\n\n  const fetchWeather = async (key: IQueryKey) => {\n    const res = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&lang=ru&units=metric&appid=${apiKeyForWeather}`\n    );\n    return res.json();\n  };\n\n  const { data, status } = useQuery([\"city\", city], fetchWeather);\n\n  return (\n    <div className=\"page-container\">\n      {isAuth && (\n        <>\n          <h1>Weather</h1>\n          <p>You can find out the weather in any city in the world.</p>\n          <WeatherForm />\n          {status === \"loading\" && <div>Loading data...</div>}\n          {status === \"error\" && <div>Error fetching data</div>}\n          {status === \"success\" && <WeatherInformation data={data} />}\n        </>\n      )}\n\n      {!isAuth && <Redirect to=\"/login\" />}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\n\nimport { LoginContextProvider } from \"./components/pages/Login/contextLogin/LoginContext\";\nimport { Navbar } from \"./components/Navbar\";\nimport { Footer } from \"./components/Footer\";\nimport { Login } from \"./components/pages/Login/Login\";\nimport { Main } from \"./components/pages/Main/Main\";\nimport { Users } from \"./components/pages/Users/Users\";\nimport { User } from \"./components/pages/User/User\";\nimport { Todos } from \"./components/pages/Todos/Todos\";\nimport { Weather } from \"./components/pages/Weather/Weather\";\nimport { WeatherContextProvider } from \"./components/pages/Weather/contextWeather/WeatherContext\";\n\nconst queryClient = new QueryClient();\n\nconst App: React.FC = () => {\n  return (\n    <LoginContextProvider>\n      <QueryClientProvider client={queryClient}>\n        <Router>\n          <Navbar />\n          <div className=\"container\">\n            <Switch>\n              <Route path=\"/weather\">\n                <WeatherContextProvider>\n                  <Weather />\n                </WeatherContextProvider>\n              </Route>\n              <Route component={Todos} path=\"/todos\" />\n              <Route component={User} path=\"/users/user-:id\" />\n              <Route component={Users} path=\"/users\" />\n              <Route component={Login} path=\"/login\" />\n              <Route component={Main} path=\"/\" exact />\n            </Switch>\n          </div>\n          <Footer />\n        </Router>\n      </QueryClientProvider>\n    </LoginContextProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}